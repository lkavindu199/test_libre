name: Create PR in Other Repo

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      target-repo:
        description: 'Target repository (owner/repo)'
        required: true
      target-branch:
        description: 'Target branch'
        required: true
        default: 'main'

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install GitHub CLI
        run: |
          type -p gh >/dev/null || curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list >/dev/null
          sudo apt update
          sudo apt install gh -y

      - name: Setup GitHub CLI authentication
        run: gh auth setup-git
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Sync to target repo and create PR
        run: |
          # Set variables
          TARGET_REPO="${{ github.event.inputs.target-repo }}"
          TARGET_BRANCH="${{ github.event.inputs.target-branch || 'main' }}"
          
          # Use default if no input provided
          if [ -z "$TARGET_REPO" ]; then
            TARGET_REPO="owner/target-repo"
          fi

          # Clone target repo
          git clone https://${{ secrets.PAT_TOKEN }}@github.com/$TARGET_REPO.git target-repo
          cd target-repo

          # Create unique branch name
          BRANCH_NAME="sync-$(date +%s)-${{ github.sha }}"

          # Create and switch to new branch
          git checkout -b $BRANCH_NAME

          # Copy files (adjust this part based on what you want to sync)
          cp -r ../* . || true
          cp ../.* . || true
          rm -rf .git

          # Add, commit, and push
          git add .
          if ! git diff --staged --quiet; then
            git commit -m "Automated sync from ${{ github.repository }} @ ${{ github.sha }}"
            git push origin $BRANCH_NAME

            # Create pull request
            gh pr create \
              --base $TARGET_BRANCH \
              --head $BRANCH_NAME \
              --title "Automated sync from ${{ github.repository }}" \
              --body "This PR was automatically created from ${{ github.repository }}@${{ github.sha }}"
          else
            echo "No changes to commit"
          fi