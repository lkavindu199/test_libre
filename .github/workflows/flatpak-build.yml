name: Build Flatpak

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y flatpak flatpak-builder python3-pip python3-venv

    - name: Setup Flatpak (user mode)
      run: |
        flatpak --user remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        flatpak --user install -y flathub org.flatpak.Builder
        flatpak --user install -y flathub org.electronjs.Electron2.BaseApp//23.08
        flatpak --user install -y flathub org.freedesktop.Sdk.Extension.node20//23.08

    - name: Get source and generate files
      run: |
        git clone https://github.com/deviitorinc/LibreLinkUpDesktop.git -b feature/trayicon source
        cd source
        
        # Install flatpak-node-generator
        python3 -m pip install --user pipx
        python3 -m pipx ensurepath
        export PATH="$HOME/.local/bin:$PATH"
        
        # Try installing from git for latest version
        pipx install git+https://github.com/flatpak/flatpak-builder-tools.git#subdirectory=node
        
        # Try generating sources with different approaches
        flatpak-node-generator npm package-lock.json --output generated-sources-new.json || \
        flatpak-node-generator npm package-lock.json --xdg-layout --output generated-sources-new.json || \
        echo "Generation failed, using existing generated-sources.json if available"
        
        # Check if generation was successful and replace existing file
        if [ -f "generated-sources-new.json" ]; then
          mv generated-sources-new.json generated-sources.json
          cp generated-sources.json ..
          echo "Successfully generated and replaced sources"
        else
          echo "Using existing generated-sources.json"
        fi

    - name: Update sources if generated (with proper permissions)
      run: |
        if [ -f "generated-sources.json" ]; then
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add generated-sources.json
          git commit -m "Update generated-sources.json" || echo "No changes to commit"
          git push || echo "Push failed - this is normal for PRs or without write permissions"
        else
          echo "No generated-sources.json to update"
        fi

    - name: Build using existing sources
      run: |
        # Check if the YAML file exists in the source directory
        if [ -f "source/rocks.poopjournal.librelinkupdesktop.yml" ]; then
          echo "Building from source directory"
          cd source
          flatpak-builder --user --install --force-clean build-dir rocks.poopjournal.librelinkupdesktop.yml
        elif [ -f "rocks.poopjournal.librelinkupdesktop.yml" ]; then
          echo "Building from current directory"
          flatpak-builder --user --install --force-clean build-dir rocks.poopjournal.librelinkupdesktop.yml
        else
          echo "Error: Could not find rocks.poopjournal.librelinkupdesktop.yml"
          exit 1
        fi

    - name: Create bundle
      run: |
        if [ -f "source/rocks.poopjournal.librelinkupdesktop.yml" ]; then
          cd source
          flatpak-builder --force-clean --repo=repo build-dir rocks.poopjournal.librelinkupdesktop.yml
          flatpak build-bundle repo librelinkupdesktop.flatpak rocks.poopjournal.librelinkupdesktop
          cp librelinkupdesktop.flatpak ..
        else
          flatpak-builder --force-clean --repo=repo build-dir rocks.poopjournal.librelinkupdesktop.yml
          flatpak build-bundle repo librelinkupdesktop.flatpak rocks.poopjournal.librelinkupdesktop
        fi

    - name: Save artifact
      uses: actions/upload-artifact@v4
      with:
        name: librelinkupdesktop-flatpak
        path: librelinkupdesktop.flatpak
        retention-days: 30